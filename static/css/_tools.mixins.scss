@mixin tintbefore($value:0.4) {
	&:before {
	  content: '';
	  position: absolute;
	  top: 0;
	  bottom: 0;
	  width: 100%;
	  opacity: $value;
	  background-color: #000;
	  z-index: 1;
	}
}
@mixin tintafter($value:0.4) {
	&:after {
	  content: '';
	  position: absolute;
	  top: 0;
	  bottom: 0;
	  width: 100%;
	  opacity: $value;
	  background-color: #000;
	  z-index: 1;
	}
}

@mixin gradientbefore() {
	&:before {
		content: '';
		position: absolute;
		top: 0;
		height:100%;
		bottom: 0;
		width: 100%;
		z-index: 1;
        background-image: -webkit-linear-gradient(rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.4));
        background-image: -o-linear-gradient(rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.4));
        background-image: linear-gradient(rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.4));
    }
}

@mixin gradientafter() {
	&:after {
		content: '';
		position: absolute;
		top: 0;
		bottom: 0;
		width: 100%;
		z-index: 1;
        background-image: -webkit-linear-gradient(rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.4));
        background-image: -o-linear-gradient(rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.4));
        background-image: linear-gradient(rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.4));
    }
}

@mixin respond($breakpoint) {
	@if $breakpoint == tablet {
		@media (min-width: 900px) { @content };
	}
	@if $breakpoint == desktop {
		@media (min-width: 1200px) { @content };
	}
}


@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}


@mixin searchIcon {
    display:inline-block;
    padding:5px;
    // background-image: url(../icons/search-icon.svg);
    background-repeat: no-repeat;
    background-size:contain;
}

@mixin searchIconMob {
    display:inline-block;
    padding:5px;
    // background-image: url(../icons/search-icon-mobile.svg);
    background-repeat: no-repeat;
    background-size:contain;
}

@mixin closeIcon {
    display:block;
    padding:5px;
    background-image: url(../icons/cross-reverse.svg);
    background-repeat: no-repeat;
    background-size:contain;
}


// // Default mixins for application


// // Default image settings when used as a css background
// @mixin image_background {
// 	background-color:$gray-4-color;
// 	background-repeat:no-repeat;
// 	background-size:cover;
// 	background-position:0% 50%;
// }



@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	border-radius: $radius;
}



// /* Padding */
@mixin padding($padding) {
  	padding:$padding;
}
@mixin padding-top($padding-top) {
  	padding-top:$padding-top;
}
@mixin padding-right($padding-right) {
  	padding-right:$padding-right;
}
@mixin padding-bottom($padding-bottom) {
  	padding-bottom:$padding-bottom;
}
@mixin padding-left($padding-left) {
  	padding-left:$padding-left;
}

// /* Transition */
@mixin transition($transition) {
	transition: all 0.3s ease-in;
	-moz-transition: all 0.3s ease-in;
	-o-transition: all 0.3s ease-in;
	-webkit-transition: all 0.3s ease-in;
	-ms-transition: all 0.3s ease-in;
}

// /* Sizes */
@mixin size($width, $height: $width) {
  	width: $width;
  	height: $height;
}


// // Image Cover Size
@mixin background-size($background-size) {
	-webkit-background-size:$background-size; /* Chrome, Safari, Opera */
	   -moz-background-size:$background-size; /* Mozilla Firefox */
	    -ms-background-size:$background-size; /* IE 9 */
		 -o-background-size:$background-size;
		    background-size:$background-size;
}


// // Transform
@mixin transform($transforms) {
	-webkit-transform:$transforms; /* Chrome, Safari, Opera */
	   -moz-transform:$transforms; /* Mozilla Firefox */
	     -o-transform:$transforms;
	    -ms-transform:$transforms; /* IE 9 */
            transform:$transforms;
}

@mixin flexbox {
	display:-webkit-box;
	display:-webkit-flex;
	display:-moz-flex;
	display:-ms-flexbox;
	display:flex;
}

%flexbox { @include flexbox; }



@mixin flex-direction($value:row) {
	@if $value == row-reverse {
		-webkit-box-direction:reverse;
		-webkit-box-orient:horizontal;
	} @else if $value == column {
		-webkit-box-direction:normal;
		-webkit-box-orient:vertical;
	} @else if $value == column-reverse {
		-webkit-box-direction:reverse;
		-webkit-box-orient:vertical;
	} @else {
		-webkit-box-direction:normal;
		-webkit-box-orient:horizontal;
	}
	-webkit-flex-direction:$value;
	-moz-flex-direction:$value;
	-ms-flex-direction:$value;
	flex-direction:$value;
}


@mixin align-items($value:stretch) {
	@if $value == flex-start {
		-webkit-box-align:start;
		-ms-flex-align:start;
	} @else if $value == flex-end {
		-webkit-box-align:end;
		-ms-flex-align:end;
	} @else {
		-webkit-box-align:$value;
		-ms-flex-align:$value;
	}
	-webkit-align-items:$value;
	-moz-align-items:$value;
	align-items:$value;
}

// //----------------------------------

// // Flexbox Align Self
// //
// // Values:auto | flex-start | flex-end | center | baseline | stretch
// // Default:auto

@mixin align-self($value:auto) {
	// No Webkit Box Fallback.
	-webkit-align-self:$value;
	-moz-align-self:$value;
	@if $value == flex-start {
		-ms-flex-item-align:start;
	} @else if $value == flex-end {
		-ms-flex-item-align:end;
	} @else {
		-ms-flex-item-align:$value;
	}
	align-self:$value;
}

// //----------------------------------------------------------------------

// // Flexbox Align Content
// //
// // The 'align-content' property aligns a flex container's lines within the
// // flex container when there is extra space in the cross-axis, similar to
// // how 'justify-content' aligns individual items within the main-axis. Note,
// // this property has no effect when the flexbox has only a single line.
// //
// // Values:flex-start | flex-end | center | space-between | space-around | stretch
// // Default:stretch
// //
// // http://w3.org/tr/css3-flexbox/#align-content-property

@mixin align-content($value:stretch) {
	// No Webkit Box Fallback.
	-webkit-align-content:$value;
	-moz-align-content:$value;
	@if $value == flex-start {
		-ms-flex-line-pack:start;
	} @else if $value == flex-end {
		-ms-flex-line-pack:end;
	} @else {
		-ms-flex-line-pack:$value;
	}
	align-content:$value;
}
